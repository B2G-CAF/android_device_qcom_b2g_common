#!/usr/bin/env python

# Copyright (c) 2014, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

def usage():
  print """
Merge two JSON files into a single file
Usage: mergeJSON [input file 1] [input file 2] [output file]
"""

import sys

if len(sys.argv) < 2 or sys.argv[1] == '-h':
  usage()
  sys.exit(0)

if len(sys.argv) < 4:
  print('error: please provide input and output files')
  usage()
  sys.exit(1)

baseA = sys.argv[1]
baseB = sys.argv[2]
merge = sys.argv[3]

import json
from pprint import pprint

dictA = None
with open(baseA) as f:
  dictA = json.load(f)

dictB = None
with open(baseB) as f:
  dictB = json.load(f)

dictMerge = {key: value for (key, value)
  in (dictA.items() + dictB.items())}

with open(merge, 'w') as f:
  json.dump(dictMerge, f)

print('Merged ' + str(baseA) + ' and ' + str(baseB) + ' into ' + str(merge))
