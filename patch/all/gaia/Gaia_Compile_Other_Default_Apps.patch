diff --git a/Makefile b/Makefile
index e8b628a..9fa08cd 100644
--- a/Makefile
+++ b/Makefile
@@ -32,11 +32,11 @@ DEBUG?=0
 
 REPORTER=Spec
 
-GAIA_APP_SRCDIRS?=apps test_apps
+GAIA_APP_SRCDIRS?=$CURDIR/apps $CURDIR/test_apps
 
 ifeq ($(MAKECMDGOALS), demo)
 GAIA_DOMAIN=thisdomaindoesnotexist.org
-GAIA_APP_SRCDIRS=apps
+GAIA_APP_SRCDIRS=$CURDIR/apps
 endif
 
 
@@ -230,7 +230,7 @@ install-settingsdb: settingsdb install-xulrunner
 preferences: install-xulrunner
 	@echo "Generating prefs.js..."
 	@mkdir -p profile
-	$(XULRUNNER) $(XPCSHELL) -e 'const GAIA_DIR = "$(CURDIR)"; const PROFILE_DIR = "$(CURDIR)/profile"; const GAIA_DOMAIN = "$(GAIA_DOMAIN)"; const DEBUG = $(DEBUG); const LOCAL_DOMAINS = $(LOCAL_DOMAINS); const HOMESCREEN = "$(HOMESCREEN)"; const GAIA_PORT = "$(GAIA_PORT)"' build/preferences.js
+	$(XULRUNNER) $(XPCSHELL) -e 'const GAIA_DIR = "$(CURDIR)"; const PROFILE_DIR = "$(CURDIR)/profile"; const GAIA_DOMAIN = "$(GAIA_DOMAIN)"; const DEBUG = $(DEBUG); const LOCAL_DOMAINS = $(LOCAL_DOMAINS); const HOMESCREEN = "$(HOMESCREEN)"; const GAIA_PORT = "$(GAIA_PORT)"; const GAIA_APP_SRCDIRS = "$(GAIA_APP_SRCDIRS)"' build/preferences.js
 	if [ -f custom-prefs.js ]; \
 	  then \
 	    cat custom-prefs.js >> profile/user.js; \
@@ -427,7 +427,7 @@ update-offline-manifests:
 # working on just gaia itself, and you already have B2G firmware on your
 # phone, and you have adb in your path, then you can use the install-gaia
 # target to update the gaia files and reboot b2g
-PROFILE_PATH = /data/local/
+PROFILE_PATH = /data/local
 install-gaia: profile
 	$(ADB) start-server
 	$(ADB) shell rm -r /cache/*
diff --git a/build/offline-cache.js b/build/offline-cache.js
index 176b0ee..e0d0468 100644
--- a/build/offline-cache.js
+++ b/build/offline-cache.js
@@ -71,8 +71,7 @@ function storeCache(id, url, content, count) {
 function getSubDirectories(directory) {
   let appsDir = Cc["@mozilla.org/file/local;1"]
                .createInstance(Ci.nsILocalFile);
-  appsDir.initWithPath(GAIA_DIR);  
-  appsDir.append(directory);
+  appsDir.initWithPath(directory);
 
   let dirs = [];  
   let files = appsDir.directoryEntries;  
@@ -158,8 +157,7 @@ function getFileContent(file) {
 function getJSON(root, dir, name) {
   let file = Cc["@mozilla.org/file/local;1"]
                .createInstance(Ci.nsILocalFile);
-  file.initWithPath(GAIA_DIR);
-  file.append(root);
+  file.initWithPath(root);
   file.append(dir);
   file.append(name);
 
@@ -201,8 +199,7 @@ appSrcDirs.forEach(function parseDirectory(directoryName) {
     let domain = "http://" + dir + "." + GAIA_DOMAIN;
     let manifest = Cc["@mozilla.org/file/local;1"]
                    .createInstance(Ci.nsILocalFile);
-    manifest.initWithPath(GAIA_DIR);
-    manifest.append(directoryName);
+    manifest.initWithPath(directoryName);
 
     const base = manifest.path;
     manifest.append(dir);
diff --git a/build/preferences.js b/build/preferences.js
index d4afd3b..a4a331a 100644
--- a/build/preferences.js
+++ b/build/preferences.js
@@ -4,8 +4,7 @@ const { 'classes': Cc, 'interfaces': Ci, 'results': Cr, } = Components;
 function getSubDirectories(directory) {
   let appsDir = Cc["@mozilla.org/file/local;1"]
                .createInstance(Ci.nsILocalFile);
-  appsDir.initWithPath(GAIA_DIR);
-  appsDir.append(directory);
+  appsDir.initWithPath(directory);
 
   let dirs = [];
   let files = appsDir.directoryEntries;
@@ -42,8 +41,7 @@ function getFileContent(file) {
 function getJSON(root, dir, name) {
   let file = Cc["@mozilla.org/file/local;1"]
                .createInstance(Ci.nsILocalFile);
-  file.initWithPath(GAIA_DIR);
-  file.append(root);
+  file.initWithPath(root);
   file.append(dir);
   file.append(name);
 
@@ -114,7 +112,9 @@ let privileges = [];
 let domains = [];
 domains.push(GAIA_DOMAIN);
 
-['apps', 'test_apps'].forEach(function parseDirectory(directoryName) {
+let appSrcDirs = GAIA_APP_SRCDIRS.split(' ');
+
+appSrcDirs.forEach(function parseDirectory(directoryName) {
   let directories = getSubDirectories(directoryName);
   directories.forEach(function readManifests(dir) {
     let manifest = getJSON(directoryName, dir, "manifest.webapp");
