diff --git a/core/Makefile b/core/Makefile
index 324a800..feba807 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -1324,6 +1324,7 @@ $(BUILT_TARGET_FILES_PACKAGE): \
 		$(built_ota_tools) \
 		$(INTERNAL_OTA_PACKAGE_TARGET) \
 		$(INTERNAL_MMC_OTA_PACKAGE_TARGET) \
+		$(INTERNAL_2KNAND_OTA_PACKAGE_TARGET) \
 		$(APKCERTS_FILE) \
 		$(HOST_OUT_EXECUTABLES)/fs_config \
 		| $(ACP)
@@ -1332,53 +1333,111 @@ $(BUILT_TARGET_FILES_PACKAGE): \
 	$(hide) mkdir -p $(dir $@) $(zip_root)
 	@# Components of the recovery image
 	$(hide) mkdir -p $(zip_root)/RECOVERY
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) mkdir -p $(zip_root)/RECOVERY/2knand
+endif
 	$(hide) $(call package_files-copy-root, \
 		$(TARGET_RECOVERY_ROOT_OUT),$(zip_root)/RECOVERY/RAMDISK)
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(call package_files-copy-root, \
+		$(TARGET_RECOVERY_ROOT_OUT),$(zip_root)/RECOVERY/2knand/RAMDISK)
+endif
 ifdef INSTALLED_KERNEL_TARGET
 	$(hide) $(ACP) $(INSTALLED_KERNEL_TARGET) $(zip_root)/RECOVERY/kernel
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(ACP) $(INSTALLED_KERNEL_TARGET) $(zip_root)/RECOVERY/2knand/kernel
+endif
 endif
 ifeq ($(TARGET_BOOTIMG_SIGNED),true)
 	$(hide) $(ACP) $(PRODUCT_PRIVATE_KEY) $(zip_root)/RECOVERY/sign-key
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(ACP) $(PRODUCT_PRIVATE_KEY) $(zip_root)/RECOVERY/2knand/sign-key
+endif
 endif
 ifdef INSTALLED_2NDBOOTLOADER_TARGET
 	$(hide) $(ACP) \
 		$(INSTALLED_2NDBOOTLOADER_TARGET) $(zip_root)/RECOVERY/second
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(ACP) \
+		$(INSTALLED_2NDBOOTLOADER_TARGET) $(zip_root)/RECOVERY/2knand/second
+endif
 endif
 ifdef BOARD_KERNEL_CMDLINE
 	$(hide) echo "$(BOARD_KERNEL_CMDLINE)" > $(zip_root)/RECOVERY/cmdline
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(BOARD_KERNEL_CMDLINE)" > $(zip_root)/RECOVERY/2knand/cmdline
+endif
 endif
 ifdef BOARD_KERNEL_BASE
 	$(hide) echo "$(BOARD_KERNEL_BASE)" > $(zip_root)/RECOVERY/base
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(BOARD_KERNEL_BASE)" > $(zip_root)/RECOVERY/2knand/base
+endif
 endif
 ifdef BOARD_KERNEL_PAGESIZE
 	$(hide) echo "$(BOARD_KERNEL_PAGESIZE)" > $(zip_root)/RECOVERY/pagesize
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(BOARD_KERNEL_PAGESIZE)" > $(zip_root)/RECOVERY/2knand/pagesize
+endif
 endif
 	@# Components of the boot image
 	$(hide) mkdir -p $(zip_root)/BOOT
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) mkdir -p $(zip_root)/BOOT/2knand
+endif
 	$(hide) $(call package_files-copy-root, \
 		$(TARGET_ROOT_OUT),$(zip_root)/BOOT/RAMDISK)
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(call package_files-copy-root, \
+		$(TARGET_ROOT_OUT),$(zip_root)/BOOT/2knand/RAMDISK)
+endif
 ifdef INSTALLED_KERNEL_TARGET
 	$(hide) $(ACP) $(INSTALLED_KERNEL_TARGET) $(zip_root)/BOOT/kernel
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(ACP) $(INSTALLED_KERNEL_TARGET) $(zip_root)/BOOT/2knand/kernel
+endif
 endif
 ifeq ($(TARGET_BOOTIMG_SIGNED),true)
 	$(hide) $(ACP) $(PRODUCT_PRIVATE_KEY) $(zip_root)/BOOT/sign-key
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(ACP) $(PRODUCT_PRIVATE_KEY) $(zip_root)/BOOT/2knand/sign-key
+endif
 endif
 ifdef INSTALLED_2NDBOOTLOADER_TARGET
 	$(hide) $(ACP) \
 		$(INSTALLED_2NDBOOTLOADER_TARGET) $(zip_root)/BOOT/second
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) $(ACP) \
+		$(INSTALLED_2NDBOOTLOADER_TARGET) $(zip_root)/BOOT/2knand/second
+endif
 endif
 ifdef BOARD_KERNEL_CMDLINE
 	$(hide) echo "$(BOARD_KERNEL_CMDLINE)" > $(zip_root)/BOOT/cmdline
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(BOARD_KERNEL_CMDLINE)" > $(zip_root)/BOOT/2knand/cmdline
+endif
 endif
 	$(hide) echo "$(call get-kernel-size)" > $(zip_root)/BOOT/kernel_size
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(call get-kernel-size)" > $(zip_root)/BOOT/2knand/kernel_size
+endif
 ifneq ($(TARGET_USES_UNCOMPRESSED_KERNEL),true)
 	$(hide) echo 1 > $(zip_root)/BOOT/compressed_kernel
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo 1 > $(zip_root)/BOOT/2knand/compressed_kernel
+endif
 endif
 ifdef BOARD_KERNEL_BASE
 	$(hide) echo "$(BOARD_KERNEL_BASE)" > $(zip_root)/BOOT/base
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(BOARD_KERNEL_BASE)" > $(zip_root)/BOOT/2knand/base
+endif
 endif
 ifdef BOARD_KERNEL_PAGESIZE
 	$(hide) echo "$(BOARD_KERNEL_PAGESIZE)" > $(zip_root)/BOOT/pagesize
+ifdef BOARD_KERNEL_2KPAGESIZE
+	$(hide) echo "$(BOARD_KERNEL_2KPAGESIZE)" > $(zip_root)/BOOT/2knand/pagesize
+endif
 endif
 	$(hide) $(foreach t,$(INSTALLED_RADIOIMAGE_TARGET),\
 	            mkdir -p $(zip_root)/RADIO; \
@@ -1472,6 +1531,19 @@ $(INTERNAL_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTATOOLS)
            -f $(fota) \
            $(BUILT_TARGET_FILES_PACKAGE) $@
 
+INTERNAL_2KNAND_OTA_PACKAGE_TARGET := $(PRODUCT_OUT)/$(name)_2knand.zip
+
+$(INTERNAL_2KNAND_OTA_PACKAGE_TARGET): KEY_CERT_PAIR := $(DEFAULT_KEY_CERT_PAIR)
+
+$(INTERNAL_2KNAND_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTATOOLS)
+	@echo "Package OTA: $@"
+	$(hide) ./build/tools/releasetools/ota_from_target_files -v \
+	   -p $(HOST_OUT) \
+           -d 2KNAND \
+           -k $(KEY_CERT_PAIR) \
+           -f $(fota) \
+           $(BUILT_TARGET_FILES_PACKAGE) $@
+
 ifeq ($(INTERNAL_USERIMAGES_USE_EXT),true)
 INTERNAL_MMC_OTA_PACKAGE_TARGET := $(PRODUCT_OUT)/$(name)_mmc.zip
 else
@@ -1490,7 +1562,7 @@ $(INTERNAL_MMC_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTATOOLS)
            $(BUILT_TARGET_FILES_PACKAGE) $@
 
 .PHONY: otapackage
-otapackage: $(INTERNAL_OTA_PACKAGE_TARGET) $(INTERNAL_MMC_OTA_PACKAGE_TARGET)
+otapackage: $(INTERNAL_OTA_PACKAGE_TARGET) $(INTERNAL_MMC_OTA_PACKAGE_TARGET) $(INTERNAL_2KNAND_OTA_PACKAGE_TARGET)
 
 # -----------------------------------------------------------------
 # The update package
diff --git a/core/main.mk b/core/main.mk
index 03a49fd..0a13b28 100644
--- a/core/main.mk
+++ b/core/main.mk
@@ -778,6 +778,7 @@ ifeq ($(BUILD_TINY_ANDROID), true)
 INSTALLED_RECOVERYIMAGE_TARGET :=
 INTERNAL_OTA_PACKAGE_TARGET :=
 INTERNAL_MMC_OTA_PACKAGE_TARGET :=
+INTERNAL_2KNAND_OTA_PACKAGE_TARGET :=
 endif
 
 # Build files and then package it into the rom formats
@@ -792,6 +793,7 @@ droidcore: files \
 	$(INSTALLED_TOMBSTONESIMAGE_TARGET) \
 	$(INTERNAL_OTA_PACKAGE_TARGET) \
 	$(INTERNAL_MMC_OTA_PACKAGE_TARGET) \
+	$(INTERNAL_2KNAND_OTA_PACKAGE_TARGET) \
 	$(INSTALLED_FILES_FILE)
 
 # dist_files only for putting your library into the dist directory with a full build.
diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index 02c84c2..575b793 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -149,7 +149,7 @@ def LoadRecoveryFSTab(zip, type):
     pass
 
   try:
-    if type == 'MTD':
+    if type == 'MTD' or type == '2KNAND':
         data = zip.read("RECOVERY/RAMDISK/etc/recovery.fstab")
     elif type == 'MMC':
         data = zip.read("RECOVERY/RAMDISK/etc/recovery_mmc.fstab")
diff --git a/tools/releasetools/ota_from_target_files b/tools/releasetools/ota_from_target_files
index b989129..759efe9 100755
--- a/tools/releasetools/ota_from_target_files
+++ b/tools/releasetools/ota_from_target_files
@@ -53,7 +53,7 @@ Usage:  ota_from_target_files [flags] input_target_files output_ota_package
       Specify whether to turn on ASLR for the package (on by default).
 
   -d  (--device_type) <type>
-      Specify mmc or mtd type device. mtd by default
+      Specify mmc, 2knand or mtd type device. mtd by default
 
   -f  (--fota) <fota>
       Specify if fota upgrade is used or not. not used by default
@@ -411,10 +411,19 @@ def WriteFullOTAPackage(input_zip, output_zip, fota):
   else:
     script.UndoRetouchBinaries(retouch_files)
 
-  boot_img = common.GetBootableImage("boot.img", "boot.img",
-                                     OPTIONS.input_tmp, "BOOT")
-  recovery_img = common.GetBootableImage("recovery.img", "recovery.img",
-                                         OPTIONS.input_tmp, "RECOVERY")
+  if OPTIONS.device_type == "2KNAND":
+    boot_img = common.GetBootableImage("boot.img", "boot.img",
+                                       OPTIONS.input_tmp, "BOOT/2knand")
+  else:
+    boot_img = common.GetBootableImage("boot.img", "boot.img",
+                                       OPTIONS.input_tmp, "BOOT")
+
+  if OPTIONS.device_type == "2KNAND":
+    recovery_img = common.GetBootableImage("recovery.img", "recovery.img",
+                                           OPTIONS.input_tmp, "RECOVERY/2knand")
+  else:
+    recovery_img = common.GetBootableImage("recovery.img", "recovery.img",
+                                           OPTIONS.input_tmp, "RECOVERY")
   MakeRecoveryPatch(output_zip, recovery_img, boot_img)
 
   Item.GetMetadata(input_zip)
@@ -422,6 +431,7 @@ def WriteFullOTAPackage(input_zip, output_zip, fota):
 
   common.CheckSize(boot_img.data, "boot.img", OPTIONS.info_dict)
   common.ZipWriteStr(output_zip, "boot.img", boot_img.data)
+
   script.ShowProgress(0.2, 0)
 
   script.ShowProgress(0.2, 10)

